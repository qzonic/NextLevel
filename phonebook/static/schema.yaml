openapi: 3.0.2
info:
  title: 'Phonebook API'
  version: 'v1'
  description: |
    Запросы к API начинаются с `/api/v1/`
    # Описание
    Этот проект позволяет каждому пользователю добавлять контакты с полями: 
    `first_name`, `last_name`, `phone`, `email`.
    Дополнительно, можно искать контакты по полям `first_name` и `last_name`, например, `?search=Иван`.
    # Алгоритм регистрации пользователей
    1. Пользователь отправляет POST-запрос на добавление нового пользователя с параметрами `username` и `password` на эндпоинт `auth/users/`.
    2. API возвращает данные зарегистрированного пользователя
    3. Пользователь отправляет POST-запрос с параметрами `username` и `password` на эндпоинт `auth/jwt/create/`, в ответе на запрос ему приходят `refresh` и `access` токены.
tags:
  - name: AUTH
    description: Регистрация пользователей и выдача токенов
  - name: CONTACT
    description: |
      Просмотреть информацию о доступных контактах. Добавление новых контактов доступно только авторизованным пользователям.
paths:
  /api/auth/users/:
    post:
      operationId: Регистрация
      description: Регистрирует пользователя с переданными `username` и `password`
      parameters: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: 'Пользователь создан'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: 'Отсутствует обязательное поле или оно некорректно'
      tags:
        - AUTH
  /api/auth/jwt/create/:
    post:
      operationId: Получение токена
      description: Возвращает access и refresh токен, если переданные данные корректные
      parameters: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: 'Токен создан'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: 'Отсутствует обязательное поле или оно некорректно'
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
            description: 'Переданы некорректные данные'
      tags:
        - AUTH
  /api/auth/jwt/refresh/:
    post:
      operationId: Обновить access токен
      description: Обновляет access токен, если переданный refresh токен корректный
      parameters: [ ]
      requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              refresh:
                type: string
            required:
              - refresh
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: 'Токен обновлен'
          '401':
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    detail:
                      type: string
                    code:
                      type: string
            description: 'Некорректный refresh токен'
      tags:
        - AUTH

  /api/v1/contacts/:
    get:
      operationId: Список контактов
      description: "Просмотр списка контактов"
      parameters:
        - name: search
          in: query
          description: Поиск по параметрам `first_name` и `last_name`
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                    description: 'Общее количество объектов в базе'
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://127.0.0.1:8000/api/contacts/?page=4
                    description: 'Ссылка на следующую страницу'
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://127.0.0.1:8000/api/contacts/?page=2
                    description: 'Ссылка на предыдущую страницу'
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Contact'
                    description: 'Список объектов текущей страницы'
          description: Отображение списка контактов
      tags:
        - CONTACT
    post:
      operationId: Добавить контакт
      description: |
        Добавление контакта доступно только авторизованным пользователям.
      parameters: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContactWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContactWrite'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: 'Контакт успешно добавлен'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: 'Ошибка валидации'
        '401':
          сontent:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: 'Отсутствует токен'
      tags:
        - CONTACT
  /api/contacts/<int:id>/:
    get:
      operationId: Получение конкретного контакта
      description: Просмотреть конкретный контакт по его id
      parameters: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: Контакт найден
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: 'Контакта с таким id нет'
      tags:
        - CONTACT
    put:
      operationId: Полное редактирование контакта
      description: |
        Редактирование контакта доступно только авторам
      parameters: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContactWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContactWrite'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: 'Контакт успешно обновлен'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: 'Отсутствует обязательное поле или оно некорректно'
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: 'Отсутствует токен'
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
              description: 'Контакт с таким id не найден'
      tags:
        - CONTACT
    patch:
      operationId: Частичное редактирование контакта
      description: |
        Редактирование контакта доступно только автору
      parameters: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactPatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContactPatch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContactPatch'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: 'Контакт успешно обновлен'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: 'Отсутствует обязательное поле или оно некорректно'
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: 'Отсутствует токен'
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
            description: 'Контакт с таким id не найден'
      tags:
        - CONTACT
    delete:
      operationId: Удалить контакт
      description: Удаление контакта доступно только автору
      parameters: [ ]
      responses:
        '204':
          description: 'Контакт удален'
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: 'Отсутствует токен'
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: 'Контакт с таким id не найден'
      tags:
        - CONTACT
components:
  schemas:
    Contact:
      title: Объект контакта
      type: object
      properties:
        id:
          type: integer
          description: Id контакта
        first_name:
          type: string
          description: Имя контакта
        last_name:
          type: string
          description: Фамилия контакта
        phone:
          type: string
          description: Телефон контакта
        email:
          type: string
          description: Почта контакта
    ContactWrite:
      title: Добавление или изменение контакта
      type: object
      properties:
        first_name:
          type: string
          description: Имя контакта
        last_name:
          type: string
          description: Фамилия контакта
        phone:
          type: string
          description: Телефон контакта
          pattern: ^((8|\+7)[\- ]?)(\(?\d{3}\)?[\- ]?)?[\d\- ]{7,10}$
        email:
          type: string
          description: Почта контакта
      required:
        - first_name
        - last_name
        - phone
        - email
    ContactPatch:
      title: Частичное изменение контакта
      type: object
      properties:
        first_name:
          type: string
          description: Имя контакта
        last_name:
          type: string
          description: Фамилия контакта
        phone:
          type: string
          description: Телефон контакта
          pattern: ^((8|\+7)[\- ]?)(\(?\d{3}\)?[\- ]?)?[\d\- ]{7,10}$
        email:
          type: string
          description: Почта контакта
    ValidationError:
      title: Ошибка валидации
      type: object
      properties:
        field_name:
          type: array
          items:
            type: string
    PermissionDenied:
      type: object
      properties:
        detail:
          description: 'Описание ошибки'
          example: "У вас недостаточно прав для выполнения данного действия."
          type: string
    UserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
      required:
        - username
        - password
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
        - username
        - password
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
      required:
        - refresh
    TokenCreate:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
